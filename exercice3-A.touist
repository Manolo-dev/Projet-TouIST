$C=[vert, orange, vide]

$T=3

$k=1 ;; idk
$ETAPES=[0..$k]

;; p(0,1,1,vide)
;; p(0,1,2,vide)
;; p(0,1,3,vide)
;; p(0,1,4,vide)

;; p(0,2,1,vide)
;; p(0,2,2,vide)
;; p(0,2,3,vide)
;; p(0,2,4,vide)

;; tube_source(1,1)
;; 1 is for the first tube

;; p(0, 1, 1, vert) ;; the first tube, first layer is green
;; p(0, 1, 2, orange) ;; the first tube, second layer is orange
;; p(0, 1, 3, vert) ;; the first tube, third layer is green
;; p(0, 1, 4, orange) ;; the first tube, fourth layer is orange

;; end init of the first tube
;; so it's look like this
;; tube 1
;; | orange |
;; |  vert  |
;; | orange |
;; |  vert  |
;; \________/

;; 2 is for the second tube

;; p(0, 2, 1, orange) ;; the second tube, first layer is orange
;; p(0, 2, 2, vert) ;; the second tube, second layer is green
;; p(0, 2, 3, orange) ;; the second tube, third layer is orange
;; p(0, 2, 4, vert) ;; the second tube, fourth layer is green

;; end init of the second tube
;; so it's look like this
;; tube 2
;; |  vert  |
;; | orange |
;; |  vert  |
;; | orange |
;; \________/

;;3 is for the third tube
;; p(0, 3, 1, vide) ;; the third tube, first layer is empty
;; p(0, 3, 2, vide) ;; the third tube, second layer is empty
;; p(0, 3, 3, vide) ;; the third tube, third layer is empty
;; p(0, 3, 4, vide) ;; the third tube, fourth layer is empty


;; end init of the third tube
;; so it's look like this
;; tube 3
;; |        |
;; |        |
;; |        |
;; |        |
;; \________/

;; p(étape, tube, étage, couleur)

p(0, 1, 1, vert)
p(0, 1, 2, vide)
tube_destination(1, 1)
couleur_deplacee(1, vert)

;;exercice 1 rules:
;; first rule
bigand $i in $ETAPES: ;; for each state
    bigand $t in [1..$T]: ;; for each tube
        bigand $e in [1..4]: ;; for each layer
            bigor $c in $C: ;; at least one color
                p($i, $t, $e, $c) ;; every state, every tube, every layer, have one color at minimum
            end
        end
    end
end

;; second rule
bigand $i in $ETAPES: ;; for each state
    bigand $t in [1..$T]: ;; for each tube
        bigand $e in [1..4]: ;; for each layer
            bigand $c in $C: ;; for each color
                bigand $c2 in $C when $c2 != $c: ;; for each color different from the previous one
                    not p($i, $t, $e, $c) or not p($i, $t, $e, $c2) ;; if a state, a tube, a layer have a color, it can't have another color
                end
            end
        end
    end
end

;; third rule
bigand $i in $ETAPES: ;; for each state
    bigand $t in [1..$T]: ;; for each tube
        bigand $e in [1..3]: ;; for each layer
            p($i, $t, $e, vide) => p($i, $t, $e+1, vide) ;; if a state, a tube, a layer is empty, then the layer above it is empty as well
        end
    end
end

;; end result
bigand $t in [1..$T]: ;; for each tube
    bigor $c in $C: ;; at least one color
        bigand $e in [1..4]: ;; for each layer
            p($k, $t, $e, $c) ;; the tube is full of a single color
        end
    end
end

bigand $t in [1..$T]: ;; for each tube
    bigand $c in $C: ;; for each color
        bigand $c1 in $C when $c != $c1: ;; for each color
            bigand $e in [1..4]: ;; for each layer 
                not p($k, $t, $e, $c) or not p($k, $t, $e, $c1) ;; the tube have only one color
            end
        end
    end
end

;;ex3 rules


;; rule 1 ( at least 1 of each)
bigand $i in $ETAPES :
    bigand $t in [1..$T] :
        bigor $t2 in [1..$T] when $t2 !=$t:
            bigor $c in $C when $c != vide :
                tube_source($i, $t) => tube_destination($i, $t2) and couleur_deplacee($i,$c) 
            end
        end
    end
end

;; rule 1(1 source max)
bigand $i in $ETAPES :
    bigand $t in [1..$T] :
        bigor $t2 in [1..$T] when $t2 !=$t:
                tube_source($i, $t) => not tube_source($i,$t2)
        end
    end
end

;; rule 1 (1 destination max)
bigand $i in $ETAPES :
    bigand $t in [1..$T] :
        bigand $t2 in [1..$T] when $t2 !=$t:
            tube_destination($i, $t) => not tube_destination($i,$t2)
        end
    end
end

;; rule 1 (1 couleur déplacée max)
bigand $i in $ETAPES :
    bigand $c in $C when $c != vide :
        bigand $c2 in $C when $c2 != vide and $c2 !=$c:
            couleur_deplacee($i,$c) => not couleur_deplacee($i,$c2)
        end
    end
end


;;rule 2
bigand $i in $ETAPES when $i != 0 :
    bigand $t in [1..$T] :
         p($i-1, $t, 1, vide) => not tube_source($i, $t) ;; if first layer is empty, it means the whole tube is empty
    end
end

;; rule 2
;; bigand $i in $ETAPES when $i != 0 :
;;     bigand $t in [1..$T] :
;;         bigand $e in [1..4]:
;;             p($i-1, $t, $e, vide) => not tube_source($i, $t) ;; 
;;         end
;;     end
;; end

;; rule 3
bigand $i in $ETAPES when $i != 0:
    bigand $t in [1..$T] :
        bigand $c in $C when $c != vide:
            p($i-1, $t, 4, $c) => not tube_destination($i, $t) ;; if the 4th layer contains a color, it means the whole tube is full
        end
    end
end

    
;; ;; rule 4 part 1
;; bigand $i in $ETAPES when $i != 0:
;;     bigand $t in [1..$T] :
;;         bigor $e in [1..4] :
;;             bigand $c in $C when $c != vide :
;;                 ((p($i-1, $t, $e+1, vide) xor p($i-1, $t, 4, $c)) and tube_source($i, $t) and p($i-1, $t, $e, $c)) => couleur_deplacee($i, $c)
;;                 ;; if the layer above ($e+1) is empty, it means e is the highest layer
;;                 ;; idk why do i need the p($i-1, $t, 4, $c)
;;             end
;;         end
;;     end
;; end

;; rule 4 part 1
bigand $i in $ETAPES when $i != 0:
    bigand $t in [1..$T] :
        bigor $e in [1..3] :
            bigand $c in $C when $c != vide :
                tube_source($i, $t) => p($i-1, $t, $e, $c) => p($i-1, $t, $e+1, vide) => couleur_deplacee($i, $c)
                ;; if the layer above ($e+1) is empty, it means e is the highest layer
                ;; idk why do i need the p($i-1, $t, 4, $c)
            end
        end
    end
end


;;rule 5
bigand $i in $ETAPES when $i != 0:
    bigand $t in [1..$T] :
        bigand $c in $C:
            bigand $e in [1..3] :
                (tube_destination($i, $t) and couleur_deplacee($i, $c)) => (p($i-1, $t, $e, $c) and p($i-1, $t, $e+1, vide)) => p($i, $t, $e, $c)
            end
        end
    end
end

;; rule 6
bigand $i in $ETAPES when $i != 0:
    bigand $t in [1..$T] :
        bigor $e in [1..3] :
            bigand $c in $C when $c != vide :
                (couleur_deplacee($i, $c) and tube_destination($i, $t)) => (p($i-1, $t, $e, $c) and p($i-1, $t, $e+1, vide) and p($i, $t, $e+1, $c))
            end
        end
    end
end

;; rule 7
bigand $i in $ETAPES when $i != 0:
    bigand $t in [1..$T] :
        bigand $e in [1..3] :
            bigand $c in $C when $c != vide :
                (couleur_deplacee($i, $c) and tube_source($i, $t)) => (p($i-1, $t, $e, $c) and p($i-1, $t, $e+1, vide) and p($i, $t, $e, vide))
            end
        end
    end
end

;; rule 8
bigand $i in $ETAPES when $i!=$k: ;; for each step
    bigand $t in [1..$T]: ;; for each tube
        bigand $e1 in [1..4]: ;; for each layer
            bigand $c in $C when $c != vide: ;; for each color
                p($i, $t, $e1, $c) => ;; if the tube have a color
                    (p($i+1, $t, $e1, vide) or p($i+1, $t, $e1, $c)) ;; after each step, any filled layer is either empty or has the same color as before
            end
        end
    end
end

;; ;; max layer
;; bigand $e in $ETAPES: ;; for each step
;;     bigand $t in [1..$T]: ;; for each tube
;;         bigand $c in $C: ;; for each color
;;             not p($e, $t, 0, $c) and not p($e, $t, 5 , $c) ;; no color can be in the 0th and 5th layer
;;         end
;;     end
;; end