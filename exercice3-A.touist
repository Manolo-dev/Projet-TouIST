$C=[vert, orange, bleu, rouge, rose, vide]

$T=3

$k=10 ;; idk
$ETAPES=[0..$k]

;; p(0,1,1,vide)
;; p(0,1,2,vide)
;; p(0,1,3,vide)
;; p(0,1,4,vide)

;; p(0,2,1,vide)
;; p(0,2,2,vide)
;; p(0,2,3,vide)
;; p(0,2,4,vide)

;; tube_source(1,1)
;; 1 is for the first tube

p(0, 1, 1, vert) ;; the first tube, first layer is green
p(0, 1, 2, orange) ;; the first tube, second layer is orange
p(0, 1, 3, vert) ;; the first tube, third layer is green
p(0, 1, 4, orange) ;; the first tube, fourth layer is orange

;; end init of the first tube
;; so it's look like this
;; tube 1
;; | orange |
;; |  vert  |
;; | orange |
;; |  vert  |
;; \________/

;; 2 is for the second tube

p(0, 2, 1, orange) ;; the second tube, first layer is orange
p(0, 2, 2, vert) ;; the second tube, second layer is green
p(0, 2, 3, orange) ;; the second tube, third layer is orange
p(0, 2, 4, vert) ;; the second tube, fourth layer is green

;; end init of the second tube
;; so it's look like this
;; tube 2
;; |  vert  |
;; | orange |
;; |  vert  |
;; | orange |
;; \________/

;;3 is for the third tube
p(0, 3, 1, vide) ;; the third tube, first layer is empty
p(0, 3, 2, vide) ;; the third tube, second layer is empty
p(0, 3, 3, vide) ;; the third tube, third layer is empty
p(0, 3, 4, vide) ;; the third tube, fourth layer is empty


;; end init of the third tube
;; so it's look like this
;; tube 3
;; |        |
;; |        |
;; |        |
;; |        |
;; \________/

;; p(étape, tube, étage, couleur)




;; rule 1
bigand $i in $ETAPES :
    bigor $t in [1..$T] :
        bigor $t2 in [1..$T] :
            bigor $c in $C when $c != vide or $t != $t2 :
                tube_source($i, $t) and tube_destination($i, $t2) and couleur_deplacee($i,$c) 
            end
        end
    end
end

rule 2
bigand $i in $ETAPES when $i != 0 :
    bigand $t in [1..$T] :
         p($i-1, $t, 1, vide) => not tube_source($i, $t) ;; if first layer is empty, it means the whole tube is empty
    end
end

;; rule 2
bigand $i in $ETAPES when $i != 0 :
    bigand $t in [1..$T] :
        bigand $e in [1..4]:
            p($i-1, $t, $e, vide) => not tube_source($i, $t) ;; 
        end
    end
end

;; rule 3
bigand $i in $ETAPES when $i != 0:
    bigand $t in [1..$T] :
        bigand $c in $C when $c != vide:
            p($i-1, $t, 4, $c) => not tube_destination($i, $t) ;; if the 4th layer contains a color, it means the whole tube is full
        end
    end
end

    
;; rule 4 part 1
bigand $i in $ETAPES when $i != 0:
    bigand $t in [1..$T] :
        bigor $e in [1..4] :
            bigand $c in $C when $c != vide :
                ((p($i-1, $t, $e+1, vide) or p($i-1, $t, 4, $c)) and tube_source($i, $t) and p($i-1, $t, $e, $c)) => couleur_deplacee($i, $c)
                ;; if the layer above ($e+1) is empty, it means e is the highest layer
                ;; idk why do i need the p($i-1, $t, 4, $c)
            end
        end
    end
end

;; rule 4 part 2 
;; idk if it's necessary or not

bigand $i in $ETAPES when $i != 0:
    bigand $t in [1..$T] :
        bigor $e in [1..4] :
            bigand $c in $C when $c != vide :
                ((p($i-1, $t, $e+1, vide) or p($i-1, $t, 4, $c)) and tube_source($i, $t) and p($i-1, $t, $e, $c) and couleur_deplacee($i, $c)) => p($i,$t,$e,vide) 
                ;; idk if this part is working correctly or not
            end
        end
    end
end


;; rule 8
bigand $i in $ETAPES when $i != 0:
    bigand $t in [1..$T] :
        bigand $e in [1..4] :
            bigand $c in $C when $c != vide :
                p($i-1, $t, $e, $c) => p($i, $t, $e, $c) xor p($i, $t, $e, vide)
                ;; i'm not sure if it's correct either
            end
        end
    end
end


